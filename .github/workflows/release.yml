name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Get package version
      #   id: package_version
      #   run: |
      #     VERSION=$(node -p "require('./package.json').version")
      #     echo "version=${VERSION}" >> $GITHUB_OUTPUT

      # - name: Create Release with Automated Notes
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const { repo, owner } = context.repo;
      #       const newVersion = '${{ steps.package_version.outputs.version }}'.trim();
      #       const tagName = `v${newVersion}`;

      #       // Create release with GitHub's automated notes
      #       const response = await github.rest.repos.createRelease({
      #         owner: owner,
      #         repo: repo,
      #         tag_name: tagName,
      #         name: `Version ${newVersion}`,
      #         generate_release_notes: true,
      #         draft: false,
      #         prerelease: false
      #       });

      #       // Add custom date header
      #       const date = new Date().toLocaleDateString("en-US", {
      #         year: "numeric",
      #         month: "long",
      #         day: "numeric"
      #       });

      #       await github.rest.repos.updateRelease({
      #         owner: owner,
      #         repo: repo,
      #         release_id: response.data.id,
      #         body: `Release Notes for Version ${newVersion} - ${date}\n\n${response.data.body}`,
      #         name: `Version ${newVersion}`
      #       });
